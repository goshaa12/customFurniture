---
import { Menu, X, ChevronDown, Phone, ChevronRight } from '@lucide/astro';

type MenuItem = {
  title: string;
  link: string;
  submenu?: MenuItem[];
};

const navigationData: MenuItem[] = [
  {
    title: "Каталог услуг",
    link: "#",
    submenu: [
      {
        title: "Кухни",
        link: "/kitchen",
        submenu: [
          { title: "Угловые кухни", link: "/corner-kitchens" },
          { title: "Прямые кухни", link: "#" },
          { title: "Кухни из ЛДСП", link: "#" },
          { title: "Кухни из МДФ", link: "#" },
          { title: "Кухни из пластика", link: "#" },
        ],
      },
      {
        title: "Гостиные",
        link: "#",
        submenu: [
          { title: "Стенки", link: "#" },
          { title: "ТВ-зоны/Тумбы под телевизор", link: "#" },
          { title: "Журнальные столики", link: "#" },
          { title: "Стеллажи", link: "#" },
          { title: "Полки", link: "#" },
        ],
      },
      {
        title: "Спальни",
        link: "#",
        submenu: [
          { title: "Кровати", link: "#" },
          { title: "Тумбы прикроватные", link: "#" },
          { title: "Комоды", link: "#" },
          { title: "Шкафы в спальню", link: "#" },
        ],
      },
      {
        title: "Детская мебель",
        link: "#",
        submenu: [
          { title: "Детские столы", link: "#" },
          { title: "Детские шкафы", link: "#" },
          { title: "Детские кровати", link: "#" },
          { title: "Шкафы в спальню", link: "#" },
        ],
      },
      {
        title: "Мебель для ванных комнат",
        link: "#",
        submenu: [
          { title: "Тумбы под раковину", link: "#" },
        ],
      },
      {
        title: "Мягкая мебель",
        link: "#",
        submenu: [
          { title: "Кресла", link: "#" },
          { title: "Диваны", link: "#" },
          { title: "Пуфы/банкетки", link: "#" },
        ],
      },
      {
        title: "Шкафы",
        link: "#",
        submenu: [
          { title: "Шкафы-купе", link: "#" },
          { title: "Встроенные шкафы", link: "#" },
          { title: "Угловые шкафы", link: "#" },
          { title: "Распашные шкафы", link: "#" },
        ],
      },
      {
        title: "Гардеробные",
        link: "#",
      },
      {
        title: "Офисная мебель",
        link: "#",
      },
      {
        title: "Прихожие",
        link: "#",
        submenu: [
          { title: "Шкафы в прихожую", link: "#" },
          { title: "Обувницы", link: "#" },
        ],
      },
    ],
  },
  {
    title: "Дополнительные услуги",
    link: "#",
    submenu: [
      { title: "Сборка и монтаж мебели", link: "/furniture-assembly" },
      { title: "Ремонт и реставрация мебели", link: "#" },
    ],
  },
  {
    title: "Наши проекты",
    link: "#",
  },
  {
    title: "Отзывы",
    link: "#",
  },
  {
    title: "Блог",
    link: "#",
  },
  {
    title: "FAQ",
    link: "#",
  },
  {
    title: "О компании",
    link: "#",
    submenu: [
      { title: "Доставка и оплата", link: "#" },
      { title: "Акции", link: "#" },
      { title: "Сотрудничество", link: "#" },
      { title: "Материалы", link: "#" },
      { title: "Вакансии", link: "#" },
      { title: "Контакты", link: "#" },
    ],
  },
];
---

<header class="sticky top-0 left-0 right-0 z-50 bg-white border-b border-gray-200">
  <nav class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex items-center justify-between h-16">
      {/* Logo */}
      <div class="flex-shrink-0">
        <a href="/" class="text-2xl font-bold text-gray-900 hover:text-amber-600 transition-colors">
          Мебель
        </a>
      </div>

      {/* Desktop Navigation - Click to Open */}
      <div class="hidden lg:flex items-center space-x-1">
        {navigationData.map((item, index) => (
          <div class="relative" data-dropdown={`desktop-${index}`}>
            <button
              class="px-3 py-2 text-sm text-gray-700 hover:text-amber-600 transition-colors rounded-lg hover:bg-gray-50 inline-flex items-center gap-1"
              data-dropdown-btn={`desktop-${index}`}
            >
              <a href={item.link} class="hover:text-amber-600">
                {item.title}
              </a>
              {item.submenu && (
                <ChevronDown size={14} class="dropdown-chevron transition-transform duration-200" />
              )}
            </button>

            {/* Desktop Dropdown Level 2 */}
            {item.submenu && (
              <div 
                class="dropdown-menu absolute left-0 mt-1 w-56 hidden opacity-0 pointer-events-none transition-all duration-200 z-50"
                data-dropdown-menu={`desktop-${index}`}
              >
                <div class="mt-2 bg-white rounded-lg shadow-lg border border-gray-200 py-2">
                  {item.submenu.map((subItem, subIndex) => (
                    <div class="relative" data-subdropdown={`desktop-${index}-${subIndex}`}>
                      <button
                        class="w-full flex items-center justify-between px-4 py-2 text-sm text-gray-700 hover:bg-amber-50 hover:text-amber-600 transition-colors"
                        data-subdropdown-btn={`desktop-${index}-${subIndex}`}
                      >
                        <a href={subItem.link} class="flex-1 text-left">
                          {subItem.title}
                        </a>
                        {subItem.submenu && (
                          <ChevronRight size={14} class="text-gray-400" />
                        )}
                      </button>

                      {/* Desktop Dropdown Level 3 */}
                      {subItem.submenu && (
                        <div
                          class="subdropdown-menu absolute left-full top-0 ml-1 w-56 hidden opacity-0 pointer-events-none transition-all duration-200 z-50"
                          data-subdropdown-menu={`desktop-${index}-${subIndex}`}
                        >
                          <div class="bg-white rounded-lg shadow-lg border border-gray-200 py-2">
                            {subItem.submenu.map((nestedItem) => (
                              <a
                                href={nestedItem.link}
                                class="block px-4 py-2 text-sm text-gray-700 hover:bg-amber-50 hover:text-amber-600 transition-colors"
                              >
                                {nestedItem.title}
                              </a>
                            ))}
                          </div>
                        </div>
                      )}
                    </div>
                  ))}
                </div>
              </div>
            )}
          </div>
        ))}
      </div>

      {/* Contact Button */}
      <div class="hidden lg:flex items-center">
        <a
          href="tel:+77001234567"
          class="inline-flex items-center gap-2 px-4 py-2 bg-amber-600 text-white rounded-lg hover:bg-amber-700 transition-colors text-sm font-medium"
        >
          <Phone size={16} />
          +7 (700) 123-45-67
        </a>
      </div>

      {/* Mobile Menu Button */}
      <button
        id="mobile-menu-btn"
        class="lg:hidden p-2 text-gray-700 hover:text-amber-600 transition-colors"
        aria-label="Toggle menu"
      >
        <Menu size={24} id="menu-icon" />
        <X size={24} id="close-icon" class="hidden" />
      </button>
    </div>

    {/* Mobile Navigation */}
    <div id="mobile-menu" class="hidden lg:hidden overflow-y-auto max-h-[calc(100vh-4rem)]">
      <div class="py-4 space-y-1 border-t border-gray-200">
        {navigationData.map((item) => (
          <details class="group">
            <summary class="flex items-center justify-between py-2 px-2 cursor-pointer text-gray-700 hover:text-amber-600 hover:bg-gray-50 rounded-lg transition-colors list-none">
              <span class="flex-1 font-medium">{item.title}</span>
              {item.submenu && (
                <ChevronDown size={16} class="transition-transform duration-300 group-open:rotate-180" />
              )}
            </summary>
            {item.submenu && (
              <div class="pl-4 mt-2 space-y-1">
                {item.submenu.map((subItem) => (
                  <details class="group/sub">
                    <summary class="flex items-center justify-between py-2 px-3 cursor-pointer text-sm text-gray-600 hover:text-amber-600 hover:bg-amber-50 rounded-lg transition-colors list-none">
                      <span class="flex-1 font-normal">{subItem.title}</span>
                      {subItem.submenu && (
                        <ChevronDown size={14} class="transition-transform duration-300 group-open/sub:rotate-180 text-gray-400" />
                      )}
                    </summary>
                    {subItem.submenu && (
                      <div class="pl-4 mt-2 space-y-1">
                        {subItem.submenu.map((nestedItem) => (
                          <a
                            href={nestedItem.link}
                            class="block py-2 px-3 text-sm text-gray-600 hover:text-amber-600 hover:bg-amber-50 rounded-lg transition-colors"
                          >
                            {nestedItem.title}
                          </a>
                        ))}
                      </div>
                    )}
                  </details>
                ))}
              </div>
            )}
          </details>
        ))}
        <div class="pt-4">
          <a
            href="tel:+77001234567"
            class="flex items-center justify-center gap-2 px-4 py-3 bg-amber-600 text-white rounded-lg hover:bg-amber-700 transition-colors font-medium"
          >
            <Phone size={18} />
            +7 (700) 123-45-67
          </a>
        </div>
      </div>
    </div>
  </nav>
</header>

<script>
  // Mobile menu toggle
  const mobileMenuBtn = document.getElementById('mobile-menu-btn');
  const mobileMenu = document.getElementById('mobile-menu');
  const menuIcon = document.getElementById('menu-icon');
  const closeIcon = document.getElementById('close-icon');

  mobileMenuBtn?.addEventListener('click', () => {
    const isHidden = mobileMenu?.classList.contains('hidden');
    
    if (isHidden) {
      mobileMenu?.classList.remove('hidden');
      menuIcon?.classList.add('hidden');
      closeIcon?.classList.remove('hidden');
      document.body.style.overflow = 'hidden';
    } else {
      mobileMenu?.classList.add('hidden');
      menuIcon?.classList.remove('hidden');
      closeIcon?.classList.add('hidden');
      document.body.style.overflow = '';
      
      // Close all details
      const allDetails = mobileMenu?.querySelectorAll('details');
      allDetails?.forEach(detail => detail.removeAttribute('open'));
    }
  });

  // Close mobile menu on link click
  const mobileLinks = mobileMenu?.querySelectorAll('a');
  mobileLinks?.forEach(link => {
    link.addEventListener('click', () => {
      mobileMenu?.classList.add('hidden');
      menuIcon?.classList.remove('hidden');
      closeIcon?.classList.add('hidden');
      document.body.style.overflow = '';
    });
  });

  // Desktop dropdown click functionality
  let currentOpenDropdown: HTMLElement | null = null;
  let currentOpenSubdropdown: HTMLElement | null = null;

  // Close dropdowns when clicking outside
  document.addEventListener('click', (e) => {
    const target = e.target as HTMLElement;
    if (!target.closest('[data-dropdown]') && currentOpenDropdown) {
      currentOpenDropdown.classList.add('hidden', 'opacity-0', 'pointer-events-none');
      currentOpenDropdown.previousElementSibling?.querySelector('.dropdown-chevron')?.classList.remove('rotate-180');
      currentOpenDropdown = null;
    }
    if (!target.closest('[data-subdropdown]') && currentOpenSubdropdown) {
      currentOpenSubdropdown.classList.add('hidden', 'opacity-0', 'pointer-events-none');
      currentOpenSubdropdown = null;
    }
  });

  // Main dropdown buttons
  const dropdownBtns = document.querySelectorAll('[data-dropdown-btn]');
  dropdownBtns.forEach(btn => {
    btn.addEventListener('click', (e) => {
      e.stopPropagation();
      const id = btn.getAttribute('data-dropdown-btn');
      const menu = document.querySelector(`[data-dropdown-menu="${id}"]`) as HTMLElement;
      const chevron = btn.querySelector('.dropdown-chevron');
      
      if (!menu) return;
      
      // Close other dropdowns
      if (currentOpenDropdown && currentOpenDropdown !== menu) {
        currentOpenDropdown.classList.add('hidden', 'opacity-0', 'pointer-events-none');
        currentOpenDropdown.previousElementSibling?.querySelector('.dropdown-chevron')?.classList.remove('rotate-180');
      }
      
      // Toggle current
      if (menu.classList.contains('hidden')) {
        menu.classList.remove('hidden', 'opacity-0', 'pointer-events-none');
        menu.classList.add('opacity-100', 'pointer-events-auto');
        chevron?.classList.add('rotate-180');
        currentOpenDropdown = menu;
      } else {
        menu.classList.add('hidden', 'opacity-0', 'pointer-events-none');
        menu.classList.remove('opacity-100', 'pointer-events-auto');
        chevron?.classList.remove('rotate-180');
        currentOpenDropdown = null;
      }
    });
  });

  // Subdropdown buttons
  const subdropdownBtns = document.querySelectorAll('[data-subdropdown-btn]');
  subdropdownBtns.forEach(btn => {
    btn.addEventListener('click', (e) => {
      e.stopPropagation();
      const id = btn.getAttribute('data-subdropdown-btn');
      const menu = document.querySelector(`[data-subdropdown-menu="${id}"]`) as HTMLElement;
      
      if (!menu) return;
      
      // Close other subdrops
      if (currentOpenSubdropdown && currentOpenSubdropdown !== menu) {
        currentOpenSubdropdown.classList.add('hidden', 'opacity-0', 'pointer-events-none');
      }
      
      // Toggle current
      if (menu.classList.contains('hidden')) {
        menu.classList.remove('hidden', 'opacity-0', 'pointer-events-none');
        menu.classList.add('opacity-100', 'pointer-events-auto');
        currentOpenSubdropdown = menu;
      } else {
        menu.classList.add('hidden', 'opacity-0', 'pointer-events-none');
        menu.classList.remove('opacity-100', 'pointer-events-auto');
        currentOpenSubdropdown = null;
      }
    });
  });
</script>

<style>
  header {
    backdrop-filter: blur(10px);
  }
</style>